generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId           String   @id @default(uuid()) @db.Uuid
  firstName        String
  lastName         String
  email            String   @unique
  password         String
  isUserVerified   Boolean  @default(false)
  verifyCode       String
  verifyCodeExpiry DateTime
  companyName      String?
  companyAddress   String?
  phoneNumber      String?
  createdAt        DateTime @default(now())

  invoices Invoice[]
  clients  Client[]
}

model Client {
  clientId        String  @id @default(uuid()) @db.Uuid
  userId          String  @db.Uuid
  contactName     String?
  companyName     String
  address         String
  email           String  @unique
  status          Boolean @default(true)
  phoneNumber     String?
  additionalNotes String?
  invoiceCount      Int     @default(0)
  totalBilledAmount Int     @default(0)

  user    User      @relation(fields: [userId], references: [userId])
  invoice Invoice[]
}

model Invoice {
  invoiceId        String   @id @default(uuid()) @db.Uuid
  userId           String   @db.Uuid
  clientId         String   @db.Uuid
  invoiceNumber    String 
  issueDate        DateTime
  dueDate          DateTime
  status           String   @default("pending")
  taxPercent       Decimal
  subTotal         Decimal
  subTotalAfterTax Decimal
  createdAt        DateTime @default(now())

  user   User   @relation(fields: [userId], references: [userId])
  client Client @relation(fields: [clientId], references: [clientId])
  items  Item[]
}

model Item {
  itemId      String  @id @default(uuid()) @db.Uuid
  invoiceId   String  @db.Uuid
  name        String
  description String
  quantity    Int
  unitPrice   Decimal
  totalPrice  Decimal

  invoice Invoice @relation(fields: [invoiceId], references: [invoiceId])
}
